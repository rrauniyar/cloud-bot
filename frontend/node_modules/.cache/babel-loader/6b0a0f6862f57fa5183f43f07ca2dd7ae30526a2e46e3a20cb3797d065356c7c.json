{"ast":null,"code":"var _jsxFileName = \"/Users/ape/Desktop/FINAL/frontend/src/utilities/PieChart.js\";\nimport { Chart as ChartJS, ArcElement, Legend, Tooltip } from 'chart.js';\nimport { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Legend, Tooltip);\nclass PieChart extends Component {\n  render() {\n    const dataLength = this.props.costData.length;\n    const colors = ['rgba(55, 126, 104, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(155, 59, 164, 0.2)', 'rgba(185, 159, 168, 0.2)', 'rgba(215, 189, 64, 0.2)', 'rgba(5, 109, 24, 0.2)', 'rgba(25, 119, 114, 0.2)', 'rgba(215, 109, 54, 0.2)', 'rgba(15, 219, 34, 0.2)', 'rgba(2, 1, 0, 0.2)'].slice(0, dataLength); // select only the needed colors\n\n    const data = {\n      labels: this.props.servicesArray,\n      datasets: [{\n        label: 'Costs',\n        data: this.props.costData,\n        backgroundColor: colors,\n        borderColor: colors.map(c => c.replace('0.2', '1')),\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      plugins: {\n        tooltips: {\n          callbacks: {}\n        }\n      },\n      legend: {\n        labels: {\n          filter: function (legendItem, chartData) {\n            return true;\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        width: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default PieChart;","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Legend","Tooltip","Component","Pie","jsxDEV","_jsxDEV","register","PieChart","render","dataLength","props","costData","length","colors","slice","data","labels","servicesArray","datasets","label","backgroundColor","borderColor","map","c","replace","borderWidth","options","plugins","tooltips","callbacks","legend","filter","legendItem","chartData","style","padding","width","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ape/Desktop/FINAL/frontend/src/utilities/PieChart.js"],"sourcesContent":["\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    Legend,\n    Tooltip\n} from 'chart.js';\nimport { Component } from 'react';\n\nimport { Pie } from 'react-chartjs-2';\n\nChartJS.register(\n    ArcElement,\n    Legend,\n    Tooltip\n)\n\n\nclass PieChart extends Component {\n    render() {\n        const dataLength = this.props.costData.length;\n        const colors = [\n            'rgba(55, 126, 104, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n            'rgba(155, 59, 164, 0.2)',\n            'rgba(185, 159, 168, 0.2)',\n            'rgba(215, 189, 64, 0.2)',\n            'rgba(5, 109, 24, 0.2)',\n            'rgba(25, 119, 114, 0.2)',\n            'rgba(215, 109, 54, 0.2)',\n            'rgba(15, 219, 34, 0.2)',\n            'rgba(2, 1, 0, 0.2)'\n        ].slice(0, dataLength); // select only the needed colors\n\n        const data = {\n            labels: this.props.servicesArray,\n            datasets: [{\n                label: 'Costs',\n                data: this.props.costData,\n                backgroundColor: colors,\n                borderColor: colors.map(c => c.replace('0.2', '1')),\n                borderWidth: 1\n            }]\n        };\n        const options = {\n            plugins: {\n                tooltips: {\n                    callbacks: {\n                        \n                    }\n                }\n            },\n            legend: {\n                labels: {\n                    filter: function (legendItem, chartData) {\n                        return true;\n                    }\n                }\n            },\n        };\n        return (\n            <div style={{ padding: '20px', width: '50%' }}>\n                <Pie data={data} options={options} />\n            </div>\n        )\n    }\n}\n\nexport default PieChart;\n"],"mappings":";AACA,SACIA,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,MAAM,EACNC,OAAO,QACJ,UAAU;AACjB,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCP,OAAO,CAACQ,QAAQ,CACZP,UAAU,EACVC,MAAM,EACNC,OACJ,CAAC;AAGD,MAAMM,QAAQ,SAASL,SAAS,CAAC;EAC7BM,MAAMA,CAAA,EAAG;IACL,MAAMC,UAAU,GAAG,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM;IAC7C,MAAMC,MAAM,GAAG,CACX,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,uBAAuB,EACvB,yBAAyB,EACzB,yBAAyB,EACzB,wBAAwB,EACxB,oBAAoB,CACvB,CAACC,KAAK,CAAC,CAAC,EAAEL,UAAU,CAAC,CAAC,CAAC;;IAExB,MAAMM,IAAI,GAAG;MACTC,MAAM,EAAE,IAAI,CAACN,KAAK,CAACO,aAAa;MAChCC,QAAQ,EAAE,CAAC;QACPC,KAAK,EAAE,OAAO;QACdJ,IAAI,EAAE,IAAI,CAACL,KAAK,CAACC,QAAQ;QACzBS,eAAe,EAAEP,MAAM;QACvBQ,WAAW,EAAER,MAAM,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACnDC,WAAW,EAAE;MACjB,CAAC;IACL,CAAC;IACD,MAAMC,OAAO,GAAG;MACZC,OAAO,EAAE;QACLC,QAAQ,EAAE;UACNC,SAAS,EAAE,CAEX;QACJ;MACJ,CAAC;MACDC,MAAM,EAAE;QACJd,MAAM,EAAE;UACJe,MAAM,EAAE,SAAAA,CAAUC,UAAU,EAAEC,SAAS,EAAE;YACrC,OAAO,IAAI;UACf;QACJ;MACJ;IACJ,CAAC;IACD,oBACI5B,OAAA;MAAK6B,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAC,QAAA,eAC1ChC,OAAA,CAACF,GAAG;QAACY,IAAI,EAAEA,IAAK;QAACW,OAAO,EAAEA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEd;AACJ;AAEA,eAAelC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}