{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { useMemo } from \"react\";\nimport { useSortBy, useTable, usePagination } from \"react-table\";\nexport function TableInstances(Data) {\n  _s();\n  const objectToKeyValuePairs = useCallback(obj => {\n    if (Array.isArray(obj)) {\n      return obj.flatMap((item, index) => objectToKeyValuePairs(item).map(_ref => {\n        let [key, value] = _ref;\n        return [`${index}.${key}`, value];\n      }));\n    }\n    return Object.entries(obj).flatMap(_ref2 => {\n      let [key, value] = _ref2;\n      if (typeof value === 'object' && value !== null) {\n        return objectToKeyValuePairs(value).map(_ref3 => {\n          let [nestedKey, nestedValue] = _ref3;\n          return [`${key}-${nestedKey}`, nestedValue];\n        });\n      } else {\n        return [[key, value]];\n      }\n    });\n  }, []);\n  const keyValuePairs = useMemo(() => objectToKeyValuePairs(Data), [Data, objectToKeyValuePairs]);\n  if (!Array.isArray(keyValuePairs)) {\n    console.log(\"error\");\n  }\n  const keyValueObject = useMemo(() => {\n    const result = {};\n    for (let i = 0; i < keyValuePairs.length; i++) {\n      var _key$match;\n      let [key, value] = keyValuePairs[i];\n      const instanceIndex = (_key$match = key.match(/^(\\d+)\\./)) === null || _key$match === void 0 ? void 0 : _key$match[1]; // extract the instance index from the key\n      if (instanceIndex !== undefined) {\n        const instanceObj = result[instanceIndex] || {};\n        const nestedKey = key.replace(`${instanceIndex}.`, ''); // remove the instance index from the key\n        instanceObj[nestedKey] = value;\n        result[instanceIndex] = instanceObj;\n      }\n    }\n    return result;\n  }, [keyValuePairs]);\n  const data = useMemo(() => Object.entries(keyValueObject).map(_ref4 => {\n    let [_, value] = _ref4;\n    return value;\n  }), [keyValueObject]);\n  const obj = useMemo(() => data ? data[0] : null, [data]);\n  const keys = useMemo(() => obj ? Object.keys(obj) : null, [obj]);\n  const columns = useMemo(() => {\n    let columnData = [];\n    if (obj) {\n      for (let objKey of keys) {\n        let newColumnObj = {};\n        newColumnObj['Header'] = objKey;\n        newColumnObj['accessor'] = objKey;\n        columnData.push(newColumnObj);\n      }\n      return columnData;\n    } else {\n      return [];\n    }\n  }, [keys, obj]);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy, usePagination);\n  return tableInstance;\n}\n_s(TableInstances, \"HfNfRgGuIw71R4eqV8rRjyB2U6s=\", false, function () {\n  return [useTable];\n});\n_c = TableInstances;\nvar _c;\n$RefreshReg$(_c, \"TableInstances\");","map":{"version":3,"names":["useCallback","useMemo","useSortBy","useTable","usePagination","TableInstances","Data","_s","objectToKeyValuePairs","obj","Array","isArray","flatMap","item","index","map","_ref","key","value","Object","entries","_ref2","_ref3","nestedKey","nestedValue","keyValuePairs","console","log","keyValueObject","result","i","length","_key$match","instanceIndex","match","undefined","instanceObj","replace","data","_ref4","_","keys","columns","columnData","objKey","newColumnObj","push","tableInstance","_c","$RefreshReg$"],"sources":["/Users/ape/Desktop/FINAL/frontend/src/utilities/TableInstances.js"],"sourcesContent":["import { useCallback } from \"react\";\nimport { useMemo } from \"react\";\nimport { useSortBy, useTable, usePagination } from \"react-table\";\n\nexport function TableInstances(Data) {\n    const objectToKeyValuePairs = useCallback((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.flatMap((item, index) =>\n                objectToKeyValuePairs(item).map(([key, value]) => [`${index}.${key}`, value])\n            );\n        }\n        return Object.entries(obj).flatMap(([key, value]) => {\n            if (typeof value === 'object' && value !== null) {\n                return objectToKeyValuePairs(value).map(([nestedKey, nestedValue]) => [\n                    `${key}-${nestedKey}`,\n                    nestedValue,\n                ]);\n            } else {\n                return [[key, value]];\n            }\n        });\n    }, []);\n\n    const keyValuePairs = useMemo(() => objectToKeyValuePairs(Data), [Data, objectToKeyValuePairs]);\n    if (!Array.isArray(keyValuePairs)) {\n        console.log(\"error\");\n    }\n    const keyValueObject = useMemo(() => {\n        const result = {};\n        for (let i = 0; i < keyValuePairs.length; i++) {\n            let [key, value] = keyValuePairs[i];\n            const instanceIndex = key.match(/^(\\d+)\\./)?.[1]; // extract the instance index from the key\n            if (instanceIndex !== undefined) {\n                const instanceObj = result[instanceIndex] || {};\n                const nestedKey = key.replace(`${instanceIndex}.`, ''); // remove the instance index from the key\n                instanceObj[nestedKey] = value;\n                result[instanceIndex] = instanceObj;\n            }\n        }\n\n        return result;\n    }, [keyValuePairs]);\n    const data = useMemo(() => Object.entries(keyValueObject).map(([_, value]) => value), [keyValueObject]);\n    const obj = useMemo(() => data ? data[0] : null, [data]);\n    const keys = useMemo(() => obj ? Object.keys(obj) : null, [obj]);\n    const columns = useMemo(() => {\n        let columnData = [];\n        if (obj) {\n            for (let objKey of keys) {\n                let newColumnObj = {};\n                newColumnObj['Header'] = objKey;\n                newColumnObj['accessor'] = objKey;\n                columnData.push(newColumnObj);\n            }\n            return columnData;\n        } else {\n            return [];\n        }\n    }, [keys, obj]);\n\n    const tableInstance = useTable({ columns, data }, useSortBy, usePagination);\n    return tableInstance;\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}